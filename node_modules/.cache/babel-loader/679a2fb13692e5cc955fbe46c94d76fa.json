{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Rahul\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rahul\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rahul\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rahul\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rahul\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\OneDriveSky\\\\Desktop\\\\PROJ FILES\\\\OLX\\\\BookTrackingApp\\\\src\\\\SearchBooks.js\";\nimport React from 'react';\nimport HomePage from \"./HomePage\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nvar SearchBooks =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBooks, _React$Component);\n\n  function SearchBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchResults: [],\n      value: ''\n    };\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n\n      _this.setState({\n        value: value\n      });\n\n      if (value.length > 0) {\n        BooksAPI.search(value).then(function (books) {\n          if (books.error) {\n            _this.setState({\n              searchResults: []\n            });\n          } else {\n            _this.setState({\n              searchResults: books\n            });\n          }\n        }).catch(_this.setState({\n          searchResults: []\n        }));\n      } else {\n        _this.setState({\n          searchResults: []\n        });\n      }\n    };\n\n    _this.resetSearch = function () {\n      _this.setState({\n        searchResults: []\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBooks, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          books = _this$props.books,\n          onChangeShelf = _this$props.onChangeShelf; // add shelves that I've selected before, and add 'none' if I havn't selected them\n\n      this.state.searchResults.forEach(function (searchedBook) {\n        books.forEach(function (book) {\n          if (book.id === searchedBook.id) {\n            searchedBook.shelf = book.shelf;\n          }\n        });\n\n        if (!searchedBook.shelf) {\n          searchedBook.shelf = 'none';\n        }\n      });\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(HomePage, {\n        resetSearch: this.resetSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.searchResults.map(function (book) {\n        return React.createElement(Book, {\n          key: book.id,\n          book: book,\n          onChangeShelf: onChangeShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return SearchBooks;\n}(React.Component);\n\nexport default SearchBooks;","map":{"version":3,"sources":["C:\\Users\\Rahul\\OneDriveSky\\Desktop\\PROJ FILES\\OLX\\BookTrackingApp\\src\\SearchBooks.js"],"names":["React","HomePage","Book","BooksAPI","SearchBooks","state","searchResults","value","handleChange","event","target","setState","length","search","then","books","error","catch","resetSearch","props","onChangeShelf","forEach","searchedBook","book","id","shelf","map","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport HomePage from \"./HomePage\"\r\nimport Book from \"./Book\"\r\nimport * as BooksAPI from \"./BooksAPI\"\r\n\r\nclass SearchBooks extends React.Component {\r\n  state = {\r\n    searchResults : [],\r\n    value: ''\r\n  }\r\n\r\n  handleChange = event => {\r\n    const value = event.target.value;\r\n    this.setState({ value: value });\r\n\r\n    if (value.length > 0) {\r\n      BooksAPI.search(value).then(books => {\r\n        if (books.error) {\r\n          this.setState({ searchResults: [] });\r\n        } else {\r\n          this.setState({ searchResults: books });\r\n        }\r\n      }).catch(this.setState({ searchResults: [] }));\r\n    }else {\r\n      this.setState({ searchResults: [] });\r\n    }\r\n  };\r\n\r\n  resetSearch = () => {\r\n    this.setState({ searchResults: [] });\r\n  }\r\n\r\n  render() {\r\n    const { books, onChangeShelf } = this.props;\r\n    // add shelves that I've selected before, and add 'none' if I havn't selected them\r\n    this.state.searchResults.forEach(function(searchedBook){\r\n      books.forEach(function(book){\r\n        if (book.id === searchedBook.id) {\r\n          searchedBook.shelf = book.shelf;\r\n        }\r\n      });\r\n      if(!searchedBook.shelf){\r\n        searchedBook.shelf = 'none';\r\n      }\r\n    })\r\n\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <HomePage resetSearch={this.resetSearch} />\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n              NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n              You can find these search terms here:\r\n              https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n              However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n              you don't find a specific author or title. Every search is limited by search terms.\r\n            */}\r\n            <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.value} onChange={this.handleChange} />\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n          {this.state.searchResults.map(book => (\r\n              <Book key={book.id} book={book} onChangeShelf={onChangeShelf} />\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBooks\r\n"]},"metadata":{},"sourceType":"module"}